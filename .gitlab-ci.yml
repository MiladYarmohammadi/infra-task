stages:
  - build
  - package
  - test
  - production

variables:
  APP_VERSION: $CI_PIPELINE_IID

versioning website:
  image: alpine
  stage: build
  script:
    - "sed -i \"s\/Infra Task\/Infra Task Version: $APP_VERSION\/g\" resources/views/welcome.blade.php"
  artifacts:
    paths:
      - resources/

build docker image:
  stage: package
  image: docker:27.0.3
  services:
    - docker:27.0.3-dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$APP_VERSION -t $DOCKER_REGISTRY_USERNAME/infra-task -t $DOCKER_REGISTRY_USERNAME/infra-task:$APP_VERSION .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE
    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USERNAME --password-stdin
    - docker push --all-tags $DOCKER_REGISTRY_IMAGE

test docker image:
  image: curlimages/curl
  stage: test
  services:
    - name: $CI_REGISTRY_IMAGE:$APP_VERSION
      alias: website
  script:
    - curl http://website:8000 | grep $APP_VERSION

