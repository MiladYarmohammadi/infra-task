stages:
  - build
  - package
  - test
  - production

variables:
  APP_VERSION: $CI_PIPELINE_IID

build website:
  image: alpine
  stage: build
  script:
    - "sed -i \"s\/Infra Task\/Infra Task Version: $APP_VERSION\/g\" resources/views/welcome.blade.php"

  artifacts:
    paths:
      - build

build docker image:
  stage: package
  image: docker:27.0.3
  services:
    - docker:27.0.3-dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$APP_VERSION .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE

test docker image:
  image: curlimages/curl
  stage: test
  services:
    - name: $CI_REGISTRY_IMAGE:$APP_VERSION
      alias: website
  script:
    - curl http://website:8000 | grep $APP_VERSION

pages:
  stage: production
  image: docker:27.0.3
  services:
    - docker:27.0.3-dind
    - name: redis:7.4.0
      command:
        - redis-server --requirepass strong_password
      alias: redis
  script:
    - docker run --hostname=infra-task --name=infra-task -p 80:8000 -e REDIS_CLIENT=predis -e REDIS_HOST=redis -e REDIS_USERNAME=default -e  REDIS_PASSWORD=strong_password -e REDIS_PORT=6379 -e CACHE_DRIVER=redis -d infra-task:latest
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
